services:

  db:
    image: postgres
    container_name: wbl0-orders-db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - orders-network


  app:
    build: .
    container_name: wbl0-orders-service
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSL_MODE=${DB_SSL_MODE}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - KAFKA_GROUP_ID=${KAFKA_GROUP_ID}
    ports:
      - "${HTTP_PORT}:8080"
    volumes:
      - .:/app
      - ./web:/app/web
    working_dir: /app
    networks:
      - orders-network
    restart: unless-stopped
    

volumes:
  postgres_data:


networks:
  orders-network:
    driver: bridge